// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id           Int     @id @default(autoincrement())
  instructorId String
  title        String  @unique
  subtitle     String?
  description  String?
  price        Float   @unique
  imageUrl     String?
  isPublished  Boolean @default(false)

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  subCategoryId Int
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])

  levelId Int
  level   Level @relation(fields: [levelId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  courses       Course[]
  subCategories SubCategory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model SubCategory {
  id         Int      @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  courses    Course[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Level {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  courses Course[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
